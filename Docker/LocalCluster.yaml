# Docker swarm demo for cronicle cluster

# Before you start:
# make sure your docker engine is in swarm mode
# build a local cronicle-edge image: docker build -t cronicle:edge -f Dockerfile .
# create cronicle secret: echo myPassword123 | docker secret create secret_key -
# make sure secret_key is not numeric (e.g. 123456), it should contain at least 1 letter or special character

# start cluster:         docker stack deploy --compose-file  Docker/LocalCluster.yaml cron_stack
# check status:          docker stack ps cron_stack
# check logs on error:   docker service logs cron_stack_manager1
# remove cluster:        docker stack rm cron_stack

version: '3.8'
services:
  worker1:
    image: cronicle:bundle
    hostname: worker1
    ports: 
      - "3013:3012"
    networks:
      - cw
    deploy:
      replicas: 1
    entrypoint: worker
    environment:
      - CRONICLE_secret_key = cronicle_secret_key
    # secrets:
    #   - source: "secret_key"
    #     target: "secret_key"
    #     uid: "0"
    #     gid: "0"
    #     mode: 0400

  worker2:
    image: cronicle:bundle
    hostname: worker2
    ports: 
      - "3014:3012"
    networks:
      - cw
    deploy:
      replicas: 1
    entrypoint: worker
    environment:
      - CRONICLE_secret_key = cronicle_secret_key
    # secrets:
    #   - source: "secret_key"
    #     target: "secret_key"
    #     uid: "0"
    #     gid: "0"
    #     mode: 0400
 
  manager1:
    image: cronicle:bundle
    hostname: manager1
    ports: 
      - "3012:3012"
    volumes:
      - cron_drive_fs:/data
    networks:
      - cw
    deploy:
      replicas: 1
    entrypoint: manager 
    environment:
      - CRONICLE_secret_key = cronicle_secret_key
    # secrets:
    #   - source: "secret_key"
    #     target: "secret_key"
    #     uid: "0"
    #     gid: "0"
    #     mode: 0400

networks:
  cw:
    driver: overlay
    attachable: true
    
# secrets:
#   secret_key:
#     external: true

volumes:
  cron_drive_fs:

# once manager1 is up and running go to Add Server menu and add worker1 and worker2
