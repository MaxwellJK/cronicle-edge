HOMEDIR=$(dirname $(readlink -f $0))

if [ -z $1 ] || [ "$1" == "--help" ]; then
  if [ -z $1 ]; then
    echo "missing command"
  fi
  echo $'
 Usage:
  cms new subjectName     --- generate passwordless pem key/ceritficate
  cms e /path/to/file     --- encrypt data (using key $CMS_KEY or conf/cronicle.key)
  cms d /path/to/file     --- decrypt data (using key $CMS_KEY or conf/cronicle.key)
  cms m /path/to/file     --- get encrypted message metadata (e.g. echo 123 | cms e | cms m)
  cms subj /path/to/file    --- get certificate subject info (recipient)
  cms serial /path/to/file  --- get certificate serial number (fingerprint)
  cms pfx /path/to/file   --- convert pem to pfx (e.g cms pfx cronicle.key > $HOME/.dotnet/corefx/cryptography/x509stores/my/cron.pfx)
  cms pem /path/to/file   --- convert pfx (windows) to pem (e.g. cms pem cron.pfx > cronicle.key)

instead of /path/to/file you can use stdin (e.g. echo 123 | cms e)
' \
  && exit 1
fi

input=${2:--}

key_file=${CMS_KEY:-$HOMEDIR/../conf/cronicle.key}

if [ "$1" == "e" ] || [ "$1" == "encrypt" ] ; then
 cat $input | openssl cms -encrypt -outform PEM $key_file
elif [ "$1" == "d" ] || [ "$1" == "decrypt" ] ; then
  cat $input | openssl cms -decrypt -inform PEM -inkey $key_file -passin pass:$pass
elif [ "$1" == "m" ] || [ "$1" == "message" ]; then
   cat $input | openssl cms -cmsout -inform PEM -outform DER | openssl pkcs7 -inform DER -print -noout
elif [ "$1" == "serial" ]; then
    cat $input | openssl x509 -noout -serial  | sed 's/serial=//'
elif [ $1 == "subj" ] || [ $1 == "subject" ]; then
    cat $input | openssl x509 -noout -subject | sed 's/subject=CN = //'
elif [ "$1" == "pfx" ]; then
    cat $input |  openssl pkcs12 -export -passout pass:
elif [ "$1" == "pem" ]; then
    cat $input | openssl pkcs12 -clcerts -nodes -passin pass:
elif [ "$1" == "new" ]; then
     if [ -z $2 ]; then
        echo 'must specify cert name'
        exit 1
     fi
     openssl req -x509 -sha256 -nodes -days 365 -keyout - -newkey rsa:4096 -subj "/CN=$2" -addext extendedKeyUsage=1.3.6.1.4.1.311.80.1 -addext keyUsage=keyEncipherment 2>/dev/null
else
    echo 'invalid command'
fi